version: 2.1

orbs:
  docker: circleci/docker@2.4.0

# Define the jobs we want to run for this project
jobs:
  # testing:
    # docker:
      # - image: cimg/python:3.8
        # environment:
          # SECRET_KEY: $SECRET_KEY
          # SENTRY_DSN: $SENTRY_DSN
          # DEBUG: $DEBUG
    # steps:
      # - checkout
      # - run:
          # name: install dependencies
          # command: |
            # python3 -m venv env
            # source env/bin/activate
            # pip install -r requirements.txt
      # - run:
          # name: launch test
          # command: |
            # source env/bin/activate
            # flake8
            # pytest --cov
            # echo "TESTING COMMIT $CIRCLE_SHA1"
# 
  # publish_docker:
  #   docker:
  #     - image: cimg/python:3.9
  #       environment:
  #         SECRET_KEY: $SECRET_KEY
  #         SENTRY_DSN: $SENTRY_DSN
  #         DEBUG: $DEBUG
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         version: 20.10.12
  #     - run:
  #         name: Build and publish Docker image
  #         command: |
  #           docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
  #           docker build -t $DOCKER_LOGIN/oc-lettings:$CIRCLE_SHA1 \
  #           --build-arg SECRET_KEY=$SECRET_KEY \
  #           --build-arg SENTRY_DSN=$SENTRY_DSN \
  #           --build-arg DEBUG=$DEBUG \
  #           .
  #           docker push $DOCKER_LOGIN/oc-lettings:$CIRCLE_SHA1
  deploy_to_aws:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv env
            source env/bin/activate
      - run:
          name: Test deploy 
          command: |
            # echo "$SSH_KEY" >> /tmp/deploy_key
            # chmod 600 /tmp/deploy_key

            # 1- Install AWS CLI
            source env/bin/activate
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            ./awscli-bundle/install -b ~/bin/aws
            echo "2- Get the public IP of the current CircleCI runner"
            PUBLIC_IP=$(curl ipinfo.io/ip)
            echo " 5- Add an ingress rule to the security group"
            ~/bin/aws ec2 authorize-security-group-ingress --region $AWS_DEFAULT_REGION --group-id $SG_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24
            echo "6- Give the ingress rule some time to propagate"
            sleep 5
            echo "connecting to instance"
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker login -u $DOCKER_LOGIN -p '${DOCKER_PASSWORD}' && docker-compose up -d "
            echo "docker stuff"
            # docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            # docker-compose up -d
            # SSH-SCRIPT
            # 8- Remove the ingress rule
            ~/bin/aws ec2 revoke-security-group-ingress --region $AWS_DEFAULT_REGION --group-id $SG_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24

workflows:
  build_and_test:
    jobs:
      # # - testing
      # - publish_docker
      #     # requires:
      #       # - testing
      - deploy_to_aws